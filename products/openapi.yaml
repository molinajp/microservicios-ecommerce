openapi: 3.0.1
info:
  title: Products Microservice
  description: Microservice to manage products module
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v1
    description: Server URL
paths:
  /products:
    post:
      tags:
        - Products
      summary: Post a Product
      description: Returns all products
      operationId: postProduct
      requestBody:
        description: Save a new product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductsDTO'
      responses:
        '200':
          description: OK - Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsDTO'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        '404':
          description: Client not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsDTO' 
    get:
      tags:
        - Products
      summary: Get all products
      description: Returns all products
      operationId: getProducts
      responses:
        '200':
          description: OK - Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsDTO'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        '404':
          description: Client not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsDTO'  
  /products/{id}:
    get:
      tags:
        - Products
      summary: Find by Id product
      description: Returns a single product
      operationId: getPetById
      parameters:
        - name: id
          in: path
          description: ID of client to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK - Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsDTO'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        '404':
          description: Client not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
  /bought-products:
    patch:
      tags:
        - Products
      summary: Update products
      operationId: updateProducts
      requestBody:
        description: Update existent products
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoughtProductsDTO'
      responses:
        '200':
          description: OK - Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsDTO'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        '404':
          description: Client not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsDTO'  
  /list-products:
    get:
      tags:
        - Products
      summary: Update products
      operationId: listProducts
      parameters:
        - name: clientId
          in: query
          description: ID of client to return sales
          schema:
            type: array
            items:
              properties:
                id:
                  type: integer
                  example: 1
      responses:
        '200':
          description: OK - Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsDTO'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        '404':
          description: Client not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
components:
  schemas:
    ProductsDTO:
      type: object
      properties: 
        id:
          type: integer
          example: 1
        description:
          type: string
          example: product 1 
        stock:
          type: integer
          example: 12
        price:
          type: integer
          example: 120
          
    ErrorsDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ExceptionDTO'
    ExceptionDTO:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        code:
          type: integer
          format: int32
        details:
          type: string
    BoughtProductsDTO:
      type: array
      items:
        properties:
          id:
            type: integer
            example: 1
          stock:
            type: integer
            example: 12