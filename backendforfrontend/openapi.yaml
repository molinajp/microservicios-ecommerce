openapi: 3.0.1
info:
  title: Trabajo Grupal - Undefined - BFF
  version: v0.0.1
servers:
- url: http://localhost:8400/bff_app/v1
  description: Server URL
paths:
  /clients/{id}:
    get:
      tags:
        - BFFControler
      description: Returns a single client
      operationId: getClient
      parameters:
        - name: id
          in: path
          description: ID of client to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDTO'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        '404':
          description: Client not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
  /products:
    get:
      tags:
        - BFFControler
      description: Returns all products
      operationId: getProducts
      responses:
        '200':
          description: OK - Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
  /orders:
    post:
      tags:
        - BFFControler
      description: Creates a sale
      operationId: createSale
      responses:
        '202':
          description: Sale created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDTO'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
  /sales-report:
    get:
      tags:
        - BFFControler
      description: Gets all sales from a client
      operationId: getSalesReport
      parameters:
        - name: clientId
          in: query
          description: ID of client to return sales
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Returns all sales from a client
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesReportDTO'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        '404':
          description: Client doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
  /products-report:
    get:
      tags:
        - BFFControler
      description: Gets top sold products
      operationId: getProductsReport
      parameters:
        - name: limit
          in: query
          description: Number of products to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Returns the most sold products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsReportDTO'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
                
components:
  schemas:
    ErrorsDTO:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ExceptionDTO'
    ExceptionDTO:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        code:
          type: integer
          format: int32
        details:
          type: string
    ClientDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        dni:
          type: string
          example: "65473892"
        name:
          type: string
          example: "Pepe"
        lastName:
          type: string
          example: "Perez"
        address:
          type: string
          example: "Calle 123"
    ProductDTO:
      type: object
      properties: 
        id:
          type: integer
          example: 1
        description:
          type: string
          example: product 1 
        stock:
          type: integer
          example: 12
        price:
          type: integer
          example: 120
    ProductsDTO:
      type: array
      items:
        $ref: '#/components/schemas/ProductDTO'
    OrderDTO:
      type: object
      properties:
        clientId:
          type: integer
          format: int64
        orderDate:
          type: string
          format: date-time
        status:
          type: string
          description: payment method
          enum:
          - TARJETA
          - EFVO
        totalAmount:
          type: number
        items:
          type: array
          items:
            $ref: '#/components/schemas/ItemDTO'
    ItemDTO:
      type: object
      properties:
        productId:
          type: integer
          format: int64
          example: 1
        quantity:
          type: integer
          format: int32
          example: 100
    CardDTO:
      type: object
      properties:
        lastFourDigits:
          type: integer
          format: int32
          example: 1234
        cardIssuer:
          type: string
          example: "VISA"
    ItemsReportDTO:
      type: object
      properties:
        orderDate:
          type: string
          format: date
        paymentMethod:
          type: string
          description: payment method
          enum:
          - EFVO
          - TARJETA
          example: TARJETA
        card:
          $ref: '#/components/schemas/CardDTO'
        totalAmount:
          type: number
          format: double
          example: 1000.55
        items:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/ItemDTO'
              - type: object
                properties:
                  description:
                    type: string
                    example: "Product 1"
    SalesReportDTO:
      type: object
      properties:
        client:
          $ref: '#/components/schemas/ClientDTO'
        items:
          type: array
          items:
            $ref: '#/components/schemas/ItemsReportDTO'
    ProductReportDTO:
      type: object
      properties:
        productId:
          type: number
          example: 10
        description:
          type: string
          example: "Producto 1"
        totalUnitsSold:
          type: number
          format: int32
          example: 100
    ProductsReportDTO:
      type: array
      items:
        $ref: '#/components/schemas/ProductReportDTO'